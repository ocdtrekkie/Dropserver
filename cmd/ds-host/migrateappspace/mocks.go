// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/teleclimber/DropServer/cmd/ds-host/migrateappspace (interfaces: SandboxMakerI)

// Package migrateappspace is a generated GoMock package.
package migrateappspace

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/teleclimber/DropServer/cmd/ds-host/domain"
	reflect "reflect"
)

// MockSandboxMakerI is a mock of SandboxMakerI interface
type MockSandboxMakerI struct {
	ctrl     *gomock.Controller
	recorder *MockSandboxMakerIMockRecorder
}

// MockSandboxMakerIMockRecorder is the mock recorder for MockSandboxMakerI
type MockSandboxMakerIMockRecorder struct {
	mock *MockSandboxMakerI
}

// NewMockSandboxMakerI creates a new mock instance
func NewMockSandboxMakerI(ctrl *gomock.Controller) *MockSandboxMakerI {
	mock := &MockSandboxMakerI{ctrl: ctrl}
	mock.recorder = &MockSandboxMakerIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSandboxMakerI) EXPECT() *MockSandboxMakerIMockRecorder {
	return m.recorder
}

// Make mocks base method
func (m *MockSandboxMakerI) Make(arg0 *domain.AppVersion, arg1 *domain.Appspace) domain.SandboxI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Make", arg0, arg1)
	ret0, _ := ret[0].(domain.SandboxI)
	return ret0
}

// Make indicates an expected call of Make
func (mr *MockSandboxMakerIMockRecorder) Make(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockSandboxMakerI)(nil).Make), arg0, arg1)
}

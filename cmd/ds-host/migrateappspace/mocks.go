// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/teleclimber/DropServer/cmd/ds-host/migrateappspace (interfaces: MigrationSandobxMgrI,MigrationSandboxI)

// Package migrateappspace is a generated GoMock package.
package migrateappspace

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMigrationSandobxMgrI is a mock of MigrationSandobxMgrI interface
type MockMigrationSandobxMgrI struct {
	ctrl     *gomock.Controller
	recorder *MockMigrationSandobxMgrIMockRecorder
}

// MockMigrationSandobxMgrIMockRecorder is the mock recorder for MockMigrationSandobxMgrI
type MockMigrationSandobxMgrIMockRecorder struct {
	mock *MockMigrationSandobxMgrI
}

// NewMockMigrationSandobxMgrI creates a new mock instance
func NewMockMigrationSandobxMgrI(ctrl *gomock.Controller) *MockMigrationSandobxMgrI {
	mock := &MockMigrationSandobxMgrI{ctrl: ctrl}
	mock.recorder = &MockMigrationSandobxMgrIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMigrationSandobxMgrI) EXPECT() *MockMigrationSandobxMgrIMockRecorder {
	return m.recorder
}

// CreateSandbox mocks base method
func (m *MockMigrationSandobxMgrI) CreateSandbox() MigrationSandboxI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSandbox")
	ret0, _ := ret[0].(MigrationSandboxI)
	return ret0
}

// CreateSandbox indicates an expected call of CreateSandbox
func (mr *MockMigrationSandobxMgrIMockRecorder) CreateSandbox() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSandbox", reflect.TypeOf((*MockMigrationSandobxMgrI)(nil).CreateSandbox))
}

// MockMigrationSandboxI is a mock of MigrationSandboxI interface
type MockMigrationSandboxI struct {
	ctrl     *gomock.Controller
	recorder *MockMigrationSandboxIMockRecorder
}

// MockMigrationSandboxIMockRecorder is the mock recorder for MockMigrationSandboxI
type MockMigrationSandboxIMockRecorder struct {
	mock *MockMigrationSandboxI
}

// NewMockMigrationSandboxI creates a new mock instance
func NewMockMigrationSandboxI(ctrl *gomock.Controller) *MockMigrationSandboxI {
	mock := &MockMigrationSandboxI{ctrl: ctrl}
	mock.recorder = &MockMigrationSandboxIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMigrationSandboxI) EXPECT() *MockMigrationSandboxIMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockMigrationSandboxI) Start(arg0, arg1 string, arg2, arg3 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start", arg0, arg1, arg2, arg3)
}

// Start indicates an expected call of Start
func (mr *MockMigrationSandboxIMockRecorder) Start(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockMigrationSandboxI)(nil).Start), arg0, arg1, arg2, arg3)
}

// Stop mocks base method
func (m *MockMigrationSandboxI) Stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop
func (mr *MockMigrationSandboxIMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockMigrationSandboxI)(nil).Stop))
}

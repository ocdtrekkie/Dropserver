// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/teleclimber/DropServer/cmd/ds-host/testmocks (interfaces: VXServices)

// Package testmocks is a generated GoMock package.
package testmocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/teleclimber/DropServer/cmd/ds-host/domain"
	reflect "reflect"
)

// MockVXServices is a mock of VXServices interface
type MockVXServices struct {
	ctrl     *gomock.Controller
	recorder *MockVXServicesMockRecorder
}

// MockVXServicesMockRecorder is the mock recorder for MockVXServices
type MockVXServicesMockRecorder struct {
	mock *MockVXServices
}

// NewMockVXServices creates a new mock instance
func NewMockVXServices(ctrl *gomock.Controller) *MockVXServices {
	mock := &MockVXServices{ctrl: ctrl}
	mock.recorder = &MockVXServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVXServices) EXPECT() *MockVXServicesMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockVXServices) Get(arg0 *domain.Appspace, arg1 domain.APIVersion) domain.ReverseServiceI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(domain.ReverseServiceI)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockVXServicesMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVXServices)(nil).Get), arg0, arg1)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/teleclimber/DropServer/cmd/ds-host/testmocks (interfaces: Views)

// Package testmocks is a generated GoMock package.
package testmocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/teleclimber/DropServer/cmd/ds-host/domain"
	fs "io/fs"
	http "net/http"
	reflect "reflect"
)

// MockViews is a mock of Views interface
type MockViews struct {
	ctrl     *gomock.Controller
	recorder *MockViewsMockRecorder
}

// MockViewsMockRecorder is the mock recorder for MockViews
type MockViewsMockRecorder struct {
	mock *MockViews
}

// NewMockViews creates a new mock instance
func NewMockViews(ctrl *gomock.Controller) *MockViews {
	mock := &MockViews{ctrl: ctrl}
	mock.recorder = &MockViewsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockViews) EXPECT() *MockViewsMockRecorder {
	return m.recorder
}

// GetStaticFS mocks base method
func (m *MockViews) GetStaticFS() fs.FS {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStaticFS")
	ret0, _ := ret[0].(fs.FS)
	return ret0
}

// GetStaticFS indicates an expected call of GetStaticFS
func (mr *MockViewsMockRecorder) GetStaticFS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStaticFS", reflect.TypeOf((*MockViews)(nil).GetStaticFS))
}

// Login mocks base method
func (m *MockViews) Login(arg0 http.ResponseWriter, arg1 domain.LoginViewData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Login", arg0, arg1)
}

// Login indicates an expected call of Login
func (mr *MockViewsMockRecorder) Login(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockViews)(nil).Login), arg0, arg1)
}

// PrepareTemplates mocks base method
func (m *MockViews) PrepareTemplates() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PrepareTemplates")
}

// PrepareTemplates indicates an expected call of PrepareTemplates
func (mr *MockViewsMockRecorder) PrepareTemplates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrepareTemplates", reflect.TypeOf((*MockViews)(nil).PrepareTemplates))
}

// Signup mocks base method
func (m *MockViews) Signup(arg0 http.ResponseWriter, arg1 domain.SignupViewData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Signup", arg0, arg1)
}

// Signup indicates an expected call of Signup
func (mr *MockViewsMockRecorder) Signup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Signup", reflect.TypeOf((*MockViews)(nil).Signup), arg0, arg1)
}
